def printer(*params):   # *args, **kwargs: * - используется для упаковки/распаковки позиционных параметров, которые содержат один элемент (списки, кортежи, множества и т.д)
                        # ** - используется для упаковки/распаковки именованных параметров, которые содержат пары элементов(словари)
    print(params)  # упаковываем
    print(*params)  # распаковываем


printer(1, 2, 3, 4, 5, 6, 7)
print('---------------------')


# Пример распаковки списка для передачи его содержимого как параметров для функции
def printer_1(a, b, c):
    print(a, b, c)


list_1 = [1, 2, 3]
printer_1(*list_1)

list_2 = [1, 2]
printer_1(*list_2, 4)
printer_1(3, *list_2)
print('---------------------')


# Пример распаковки словаря
def printer_2(a, b, c):
    print(a, b, c)


dict_1 = {
    'a': 1,
    'b': 2,
    'c': 3
}
printer_2(*dict_1)
printer_2(**dict_1)  # для вывода имена ключей в словаре должны соответствовать именам позиционных параметров в функции
print('---------------------')


# Пример_1 распаковки словаря функцией без параметров
def printer_3(**kwargs):
    print(kwargs)


dict_1 = {
    'a': 1,
    'b': 2,
    'c': 3
}

printer_3(**dict_1)
print('---------------------')


# Пример_2 распаковки словаря функцией без параметров
def printer_4(**kwargs):
    for key in kwargs:
        print(key)


dict_1 = {
    'a': 1,
    'b': 2,
    'c': 3
}

printer_4(**dict_1)
print('---------------------')


# Пример_3 распаковки словаря функцией без параметров
def printer_5(**kwargs):
    for key, value in kwargs.items():
        print(key, value)


dict_1 = {
    'a': 1,
    'b': 2,
    'c': 3
}

printer_5(**dict_1)
print('---------------------')


# Пример работы со списком и словарём одновременно
def printer_6(a, b, c):  # необходимо обязательно следить за тем сколько функция принимает параметров
    print(a, b, c)


list_1 = [1, 2]
dict_1 = {
    'c': 3
}
printer_6(*list_1, **dict_1)
print('---------------------')
