# Классы относятся к стилю ООП.

class Human:
    # Функции внутри класса являются МЕТОДами
    def __init__(self, name):  # __init__ - инициализатор (конструкция конструктора класса)
        # Сюда мы прописываем то, что будет создаваться при инициализации класса
        self.name = name  # name - переменная, которая является АТРИБУТом/характеристикой класса


den = Human('Денис')  # den - объект класса Human (экземпляр класса) созданный нами
print(type(den))

# Пример встроенных классов
print(type(5))
print(type('den'))
print('---------------------------')

# Все создаваемые (новые) объекты класса, являются уникальными
max = Human('Макс')
print(den == max)
print(den is max)
print(f'{id(den)}\n{id(max)}')
print('---------------------------')
print(f'{den.name}\n{max.name}')

'''
Класс - Это некая сущность содержащая в себе описание определённых характеристик/свойств для будущих объектов (экземпляров класса), к которым мы будем применять данный класс.
Т.е. при определении какого-то объекта и применении к нему определённого класса, мы "наделяем" этот объект характеристиками/свойствами (которых может быть много разных) описанными в данном классе
Т.е. классы нужны для того, чтобы не описывать при каждом создании объекта его свойства, а просто применить к нему нужный класс.
В классе мы описываем общее семейство объектов со схожим функционалом и в дальнейшем применяем данный класс к создаваемым объектам (экземплярам класса), чтобы использовать этот функционал.

Атрибуты - уникальные черты объектов
Методы - способности объектов
self - "указатель" на самого себя, т.е. при выполнении на место self "становиться" объект к которому мы применяем класс
den = Human('Денис')

...
    def __init__(den, name):
...

'''
